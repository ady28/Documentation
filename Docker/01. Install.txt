###Ubuntu
curl -fsSL https://download.docker.com/linux/ubuntu/gpg -x "http://192.168.1.254:80" | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update
sudo apt install apt-transport-https ca-certificates curl gnupg lsb-release
sudo apt install docker-ce docker-ce-cli containerd.io

#Check service
systemctl status docker

#Configure a user to run docker without sudo (new session needed for changes to take effect)
sudo usermod -aG docker user100

#Check version
docker --version

#Configure docker proxy
sudo mkdir -p /etc/systemd/system/docker.service.d
sudo nano /etc/systemd/system/docker.service.d/proxy.conf
#Write#
[Service]
Environment="HTTP_PROXY=http://192.168.1.254:80"
Environment="HTTPS_PROXY=http://192.168.1.254:80"
Environment="NO_PROXY="localhost,127.0.0.1,::1"
#end#
#Reload daemon config
sudo systemctl daemon-reload
#Restart docker
sudo systemctl restart docker.service

#Try running a container
docker run hello-world
docker container run -ti mcr.microsoft.com/powershell

###CentOS
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce docker-ce-cli containerd.io
systemctl enable docker
systemctl start docker
systemctl status docker

###Windows Server
Install-Module -Name DockerMsftProvider -Repository PSGallery -Force -Proxy http://192.168.1.254:80
#Apply the windows provider proxy fix
Import-PackageProvider -Name DockerMsftProvider -Force
Install-Package -Name docker -ProviderName DockerMsftProvider -Proxy http://192.168.1.254:80
Restart-Computer

#Set proxy
[Environment]::SetEnvironmentVariable("HTTP_PROXY", "http://192.168.1.254:80", [EnvironmentVariableTarget]::Machine)
[Environment]::SetEnvironmentVariable("HTTPS_PROXY", "http://192.168.1.254:80", [EnvironmentVariableTarget]::Machine)
[Environment]::SetEnvironmentVariable("NO_PROXY", "localhost,127.0.0.1,::1", [EnvironmentVariableTarget]::Machine)
Restart-Service -Name docker

docker image pull mcr.microsoft.com/windows/nanoserver:ltsc2022
docker container run hello-world

#Check logging driver
docker info --format '{{.LoggingDriver}}'