#Run the docker registry in a container (if the container dies, restart it)
docker run -d -p 5000:5000 --restart=always --name registry registry:2
#Tag an image
docker tag hello-world:latest localhost:5000/aboutit/hello:latest
#Push image
docker push localhost:5000/aboutit/hello:latest


#Install registry as an application on an ubuntu server
sudo apt install docker-registry
#Check that the service is running (on centos the name is docker-distribution)
systemctl status docker-registry
#Check version (on centos the name is just registry)
docker-registry --version
#Open port 5000
sudo ufw allow 5000/tcp
#Change the auth to permit unauthenticated use for testing (on centos it is /etc/docker-distribution/registry/config.yml)
sudo nano /etc/docker/registry/config.yml
#Remove the auth part
sudo systemctl restart docker-registry
#From another server make sure you configured NO_PROXY for your domain name, that you have insecure registry set for docker
#Tag an image
docker tag hello-world ubuntu02.testcorp.local:5000/hello-world
#Push image
docker push ubuntu02.testcorp.local:5000/hello-world

#Securing the registry with self-signed certificates (for production use a CA)
mkdir certs
#Generate cert
openssl req -out certs/testcorp.crt -newkey rsa:4096 -nodes -sha256 -x509 -days 365 -keyout certs/testcorp.key -addext "subjectAltName = DNS:ubuntu02.testcorp.local"
#Add the certificates to the config file
sudo nano /etc/docker/registry/config.yml
#Place the following under http
#begin#
  tls:
    certificate: /home/user100/certs/testcorp.crt
    key: /home/user100/certs/testcorp.key
#end#
#Give the docker-registry user access to the key file
sudo chown docker-registry certs/testcorp.key
sudo systemctl restart docker-registry
#Copy the crt file to the docker client machine
cd certs
scp testcorp.crt root@192.168.1.253:/root
#On the client machine do the following:
mv testcorp.crt ca.crt
mkdir /etc/docker/certs.d
mkdir /etc/docker/certs.d/ubuntu02.testcorp.local:5000
cp ca.crt /etc/docker/certs.d/ubuntu02.testcorp.local:5000
systemctl restart docker
#try it out
docker image tag alpine ubuntu02.testcorp.local:5000/alpine
docker image push ubuntu02.testcorp.local:5000/alpine

#using basic authentication (requires TLS to be configured first)
mkdir auth
#Generate a password file with the htpasswd utility
#Install the utility
sudo apt install apache2-utils -y
htpasswd -Bbn user100 <pass> >> auth/htpasswd
#Add an auth section to the config file
sudo nano /etc/docker/registry/config.yml
#write#
auth:
  htpasswd:
    realm: basic-realm
    path: /home/user100/auth/htpasswd
#end#
sudo systemctl restart docker-registry
#On the client do a docker login to the registry

#List repositories from registry
Invoke-RestMethod -Uri 'https://lnx1:5000/v2/_catalog' -SkipCertificateCheck -Credential $cred
#List tags for images in repository
Invoke-RestMethod -Uri 'https://lnx1:5000/v2/test1/tags/list' -SkipCertificateCheck -Credential $cred
#Get details where test1 is the name and latest is the tag
Invoke-RestMethod -Uri 'https://lnx1:5000/v2/test1/manifests/latest' -SkipCertificateCheck -Credential $cred
#Details: https://docs.docker.com/registry/spec/api/#listing-repositories