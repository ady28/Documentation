--- C:\Program Files\WindowsPowerShell\Modules\DockerMsftProvider\1.0.0.8\DockerMsftProvider.psm1.orig    2019-08-26 18:49:00.000000000 +0200
+++ C:\Program Files\WindowsPowerShell\Modules\DockerMsftProvider\1.0.0.8\DockerMsftProvider.psm1 2020-09-02 16:48:40.049426000 +0200
@@ -1159,8 +1159,7 @@
         return $Uri
     }

-    $link = $response.Result.RequestMessage.RequestUri
-    $fullUrl = $link.AbsoluteUri
+    $fullUrl = $response.BaseResponse.ResponseUri
     return $fullUrl
 }

@@ -1178,11 +1177,7 @@
         Add-Type -AssemblyName System.Net.Http
     }

-    $httpClient = New-Object System.Net.Http.HttpClient
-    $request = New-Object System.Net.Http.HttpRequestMessage
-    $request.Method = [System.Net.Http.HttpMethod]::Head
-    $request.RequestUri = $Uri
-    $response = $httpclient.SendAsync($request)
+    $response = Invoke-WebRequest -Uri $Uri -Proxy http://proxy:3128 -UseBasicParsing -Method HEAD

     return $response
 }
@@ -1578,8 +1573,8 @@
             Write-Verbose "Downloading $downloadUrl to $destination"
             $startTime = Get-Date
             Write-Verbose "About to download"
-            Invoke-WebRequest -Uri $downloadURL `
-                            -OutFile $destination
+            Invoke-WebRequest -Uri $downloadURL -Proxy http://proxy:3128 -OutFile $destination

             Write-Verbose "Finished downloading"
             $endTime = Get-Date
@@ -1657,7 +1652,7 @@
     if($URL.StartsWith("https://"))
     {
         $response = Get-HttpResponse -Uri $URL
-        $size = $response.Result.Content.Headers.ContentLength
+        $size = $response.BaseResponse.ContentLength
     }

     $parent = Split-Path $Destination -Parent