---
- name: Install Fedora prerequisites
  yum: 
    name: yum-utils
    state: present
  when:
    ansible_distribution_file_variety == "RedHat"
- name: Install Debian prerequisites
  apt: 
    name:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    state: present
    update_cache: yes
  when:
    ansible_distribution_file_variety == "Debian"
- name: Add docker repo to Fedora package manager
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
    use_proxy: "{{ dockerRole_urlUseProxy }}"
  environment:
    http_proxy: "{{ dockerRole_httpProxy  }}"
    https_proxy: "{{ dockerRole_httpsProxy  }}"
  when:
    ansible_distribution_file_variety == "RedHat"
- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when:
    ansible_distribution_file_variety == "Debian"
  environment:
    http_proxy: "{{ dockerRole_httpProxy  }}"
    https_proxy: "{{ dockerRole_httpsProxy  }}"
- name: Add docker repo to Debian package manager
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present
  when:
    ansible_distribution_file_variety == "Debian"
- name: Install docker Fedora
  yum: 
    name: "{{ dockerRole_dockerPackages }}"
    state: present
  when:
    ansible_distribution_file_variety == "RedHat"
- name: Install docker Debian
  apt: 
    name: "{{ dockerRole_dockerPackages }}"
    state: present
    update_cache: yes
  when:
    ansible_distribution_file_variety == "Debian"
- name: Start and enable docker
  service:
    name: docker
    state: started
    enabled: yes
- name: Add user to the docker group
  user:
    name: user100
    groups: docker
    append: yes
- name: Create docker config directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
- name: Copy docker proxy config file
  copy:
    src: docker_proxy.conf
    dest: /etc/systemd/system/docker.service.d/proxy.conf
  notify: docker restart
- name: Create user local docker directory
  file:
    path: /home/user100/.docker
    state: directory
    group: user100
    owner: user100
- name: Copy docker config file
  copy:
    src: local_docker_config.json
    dest: /home/user100/.docker/config.json
    group: user100
    owner: user100