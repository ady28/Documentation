###Docker container as an agent
#Create a keypair on the controller
ssh-keygen -f ~/.ssh/jenkins_agent_key
#Create a Jenkins ssh credential in the global scope
#Kind: ssh username with privatekey
#id: jenkins
#description: SSH key for jenkins user
#username: jenkins
#Run the container on the docker host
docker run -d --rm --name=agent1 -p 2202:22 -e "JENKINS_AGENT_SSH_PUBKEY=[your-public-key]" jenkins/ssh-agent:alpine

#Set up the agent in jenkins from Manage nodes and clouds
#New node
#Name: agent1
#select permanent agent
#remote root directory: /home/jenkins
#label: agent1
#usage: only build jobs....
#launch method: launch agents vis ssh
#host: 192.168.1.251
#credentials: jenkins
#key verification: manually trusted...
#Go to advanced and enter the custom port 2202
#Enter the java path: /opt/java/openjdk/bin/java

#Delegate the first job
#From the jenkins dashboard go to New item
#Item name: agent1 first job
#select freestyle project and click ok
#Check option: Restrict where this project can run and enter the label agent1
#At build section select execute shell
#Enter command: echo $NODE_NAME
#Save job
#Click on Build now, click on the job and go to Console output
#You can also check the parameterized box to add extra variables

#To select key verification to happen you must the following before
sudo mkdir /var/lib/jenkins/.ssh
sudo ssh-keyscan -p 2202 -H 192.168.1.251 >> ./hk
sudo mv ./hk /var/lib/jenkins/.ssh/known_hosts
sudo chown -R jenkins:jenkins /var/lib/jenkins/.ssh/
#Then just set the verify setting and connect the agent

###CentOS server as agent
yum -y install java-1.8.0-openjdk
yum -y install git

useradd -d /var/lib/jenkins jenkins
mkdir /var/lib/jenkins/.ssh
nano /var/lib/jenkins/.ssh/authorized_keys
#Copy the text of the public key file generated on the master for the jenkins user and paste it in the nano screen
#Add the server's key in the known_hosts on the controller
#Add the agent

#Disable built-in agent:
#Set 0 executors, set a tag like no_execute and configure it to run based on tags
